#!/usr/bin/sh
set -x

# Get API key from the keyfile
# I sure hope this matches setup.sh
MESSAGE=$1
KEYFILE="${XDG_STATE_HOME:-$HOME/.local/state}/ChatGPT-CLI/openai_api_key"
HISTORYFILE="${XDG_STATE_HOME:-$HOME/.local/state}/ChatGPT-CLI/session_history"
source "$HISTORYFILE"

function clear_session() {
	printf "export USER_SESSION_HISTORY=\"\"\nexport ASSISTANT_SESSION_HISTORY=\"\"" > "$HISTORYFILE"
	echo "Session cleared."
}	

if [[ "$MESSAGE" == "clear_session" ]]; then
	clear_session
else
	# run the program like normal
	if [[ -f "$KEYFILE" ]]; then
		# Do what the thing with the reading and the file
		source "$KEYFILE"
	
		# Ensure it actually set the thing
		if [[ ! -v OPENAI_API_KEY ]]; then
			echo "Keyfile is malformed" >&2
			exit 1
		fi
	else
		echo "Must set API key first! Run setup.sh" >&2
		exit 1
	fi
	
	# create lists with conversation history
	# user history
	OLD_IFS="$IFS"
	IFS="½" read -a PAST_PROMPTS_LIST <<< "$USER_SESSION_HISTORY"
	PAST_PROMPTS=()
	for item in "${PAST_PROMPTS_LIST[@]}"; do
		PAST_PROMPTS+=("{\"role\": \"user\", \"content\": \"$item\"}")
	done	
	echo "PAST_PROMPTS ${PAST_PROMPTS[@]}"
	# assistant history
	IFS="½" read -a PAST_RESPONSE_LIST <<< "$ASSISTANT_SESSION_HISTORY"
	echo "LIST ${PAST_RESPONSE_LIST[@]}"
	PAST_RESPONSES=()
	for item in "${PAST_RESPONSE_LIST[@]}"; do
		echo "ITEMS $item"
		PAST_RESPONSES+=("{\"role\": \"assistant\", \"content\": \"$item\"}")
	done	
	echo "PAST_RESPONSES ${PAST_RESPONSES}"
	PAST_CONVERSATION=()
	LENGTH=${#PAST_RESPONSES[@]}
	echo "PAST_PROMPTS ${PAST_PROMPTS[@]}"
	echo "PAST_RESPONSES ${PAST_RESPONSES[@]}"
	echo "LENGTH $LENGTH"
	for (( i="$LENGTH"; i>=0; i-- )); do
		PAST_CONVERSATION+=("${PAST_PROMPTS[i]}")
		PAST_CONVERSATION+=("${PAST_RESPONSES[i]}")
	done
	echo "ASDASDASD ${PAST_CONVERSATION[@]}"
	PAST_CONVERSATION=$(echo "${PAST_CONVERSATION[@]}" | tr " " "" )
	echo "ASDAKSJDAKSD2 ${PAST_CONVERSATION[@]}"
	# api call
	RESPONSE=$(curl https://api.openai.com/v1/chat/completions \
	  -H "Content-Type: application/json" \
	  -H "Authorization: Bearer $OPENAI_API_KEY" \
	  -d '{
	     "model": "gpt-3.5-turbo",
	     "messages": ['${PAST_CONVERSATION[@]}', {"role": "user", "content": "'"$MESSAGE"'"}],
	     "temperature": 0.7
     	}' | jq -r .choices[0].message.content)
	echo "RESPONSE $RESPONSE"

	# replace user history string with the updated version	
	if [[ -f "$HISTORYFILE" ]]; then
		sed -i "1s/\"$USER_SESSION_HISTORY\"/\"$MESSAGE½$USER_SESSION_HISTORY\"/" "$HISTORYFILE"
		source "$HISTORYFILE"
	fi

	# remove newlines so the assistant history string can be replaced
	RESPONSE=$(echo "$RESPONSE" | tr '\n' ' ')
	sed -i "2s/\"$ASSISTANT_SESSION_HISTORY\"/\"$RESPONSE½$ASSISTANT_SESSION_HISTORY\"/" "$HISTORYFILE"
fi
# reset IFS, so it doesn't interfere with other stuff
IFS="$OLD_IFS"
