#!/bin/bash

# i am aware this code is complete garb, i will rewrite at some point though 
# it works perfectly fine(apart from the first message in a session being null but thats a minor detail, will fix)

MESSAGE=$1
# Get API key from the keyfile
# I sure hope this matches setup.sh
KEYFILE="${XDG_STATE_HOME:-$HOME/.local/state}/ChatGPT-CLI/openai_api_key"
HISTORYFILE="${XDG_STATE_HOME:-$HOME/.local/state}/ChatGPT-CLI/session_history"
source "$HISTORYFILE"

temperature=0.7

function clear_session() {
	printf "export USER_SESSION_HISTORY=\"\"\nexport ASSISTANT_SESSION_HISTORY=\"\"" > "$HISTORYFILE"
	echo "Session cleared."
}	

while getopts 'cht:' OPTION; do
	case "$OPTION" in
		h)
			echo "super helpful echo"
			exit 0
			;;
		t)
			temperature="$OPTARG"
			echo "Temperature set to $temperature"
			;;
		c)
			clear_session
			gpt > /dev/null
			exit 0 
			;;
	esac
done

# run the program like normal
if [[ -f "$KEYFILE" ]]; then
	# Do what the thing with the reading and the file
	source "$KEYFILE"

	# Ensure it actually set the thing
	if [[ ! -v OPENAI_API_KEY ]]; then
		echo "Keyfile is malformed" >&2
		exit 1
	fi
else
	echo "Must set API key first! Run setup.sh" >&2
	exit 1
fi

# create lists with conversation history
# user history
OLD_IFS="$IFS"
IFS="½" read -a PAST_PROMPTS_LIST <<< "$USER_SESSION_HISTORY"
PAST_PROMPTS=()
for item in "${PAST_PROMPTS_LIST[@]}"; do
	PAST_PROMPTS+=("{\"role\": \"user\", \"content\": \"$item\"},")
done	
# assistant history
IFS="½" read -a PAST_RESPONSE_LIST <<< "$ASSISTANT_SESSION_HISTORY"
PAST_RESPONSES=()
I_WANT_TO_DIE=0
for item in "${PAST_RESPONSE_LIST[@]}"; do
	if [[ "$I_WANT_TO_DIE" == 0 ]]; then
		I_WANT_TO_DIE=1
		PAST_RESPONSES+=("{\"role\": \"assistant\", \"content\": \"$item\"}")
	else
		PAST_RESPONSES+=("{\"role\": \"assistant\", \"content\": \"$item\"},")
	fi
done	
PAST_CONVERSATION=()
LENGTH=${#PAST_RESPONSES[@]}
for (( i="$LENGTH"; i>=0; i-- )); do
	PAST_CONVERSATION+=("${PAST_PROMPTS[i]}")
	PAST_CONVERSATION+=("${PAST_RESPONSES[i]}")
done
PAST_CONVERSATION=$(printf "${PAST_CONVERSATION[@]}" | sed 's/ //g' )
PAST_CONVERSATION=$(echo "${PAST_CONVERSATION[@]}")
# api call
echo -e "Asking ChatGPT...\n"
RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $OPENAI_API_KEY" \
  -d '{
     "model": "gpt-3.5-turbo",
     "messages": ['"$PAST_CONVERSATION"', {"role": "user", "content": "'"$MESSAGE"'"}],
     "temperature": '$temperature'
}' | jq -r .choices[0].message.content)
echo -e "$RESPONSE\n"


# replace user history string with the updated version	
if [[ -f "$HISTORYFILE" ]]; then
	sed -i "1s/\"$USER_SESSION_HISTORY\"/\"$MESSAGE½$USER_SESSION_HISTORY\"/" "$HISTORYFILE"
	source "$HISTORYFILE"
fi

# remove newlines so the assistant history string can be replaced
RESPONSE=$(printf "$RESPONSE" | tr '\n' ' ' )
sed -i "2s/\"$ASSISTANT_SESSION_HISTORY\"/\"$RESPONSE½$ASSISTANT_SESSION_HISTORY\"/" "$HISTORYFILE"

# reset IFS, so it doesn't interfere with other stuff
IFS="$OLD_IFS"
