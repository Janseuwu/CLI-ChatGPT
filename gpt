#!/usr/bin/sh

set -x

# Get API key from the keyfile
# I sure hope this matches setup.sh
MESSAGE=$1
KEYFILE="${XDG_STATE_HOME:-$HOME/.local/state}/ChatGPT-CLI/openai_api_key"
HISTORYFILE="${XDG_STATE_HOME:-$HOME/.local/state}/ChatGPT-CLI/session_history"

function clear_session() {
	printf "export USER_SESSION_HISTORY=\"\"\nexport ASSISTANT_SESSION_HISTORY=\"\"" > "$HISTORYFILE"
	echo "Session cleared."
}	

if [[ "$MESSAGE" == "clear_session" ]]; then
	clear_session
else
	# run the program like normal
	if [[ -f "$KEYFILE" ]]; then
		# Do what the thing with the reading and the file
		source "$KEYFILE"
	
		# Ensure it actually set the thing
		if [[ ! -v OPENAI_API_KEY ]]; then
			echo "Keyfile is malformed" >&2
			exit 1
		fi
	else
		echo "Must set API key first! Run setup.sh" >&2
		exit 1
	fi
	
	# replace user history string with the updated version	
	if [[ -f "$HISTORYFILE" ]]; then
		source "$HISTORYFILE"
		sed -i "1s/\"$USER_SESSION_HISTORY\"/\"$MESSAGE:$USER_SESSION_HISTORY\"/" "$HISTORYFILE"
		source "$HISTORYFILE"
	fi
	
	# api call
	RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
	  -H "Content-Type: application/json" \
	  -H "Authorization: Bearer $OPENAI_API_KEY" \
	  -d '{
	     "model": "gpt-3.5-turbo",
	     "messages": [{"role": "user", "content": "'"$MESSAGE"'"}],
	     "temperature": 0.7
     	}' | jq -r .choices[0].message.content)
	echo "RESPONSE $RESPONSE"

	# remove newlines so the assistant history string can be replaced
	RESPONSE=$(echo "$RESPONSE" | tr '\n' ' ')
	sed -i "2s/\"$ASSISTANT_SESSION_HISTORY\"/\"$RESPONSE:$ASSISTANT_SESSION_HISTORY\"/" "$HISTORYFILE"
fi
